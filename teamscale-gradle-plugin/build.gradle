plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id 'com.github.johnrengelman.shadow' version '4.0.1'
    id 'java'
    id 'java-gradle-plugin'
    id 'maven'
}

gradlePlugin {
    plugins {
        teamscale {
            id = "teamscale"
            implementationClass = "com.teamscale.TeamscalePlugin"
        }
    }
}

version pluginVersion

configurations {
    bundled
    implementation.extendsFrom(bundled)
}

dependencies {
    implementation gradleApi()
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.11'

    bundled project(':report-generator')

    bundled 'org.eclipse.jgit:org.eclipse.jgit:5.0.2.201807311906-r'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testImplementation 'org.assertj:assertj-core:3.8.0'
}

test {
    testLogging.exceptionFormat "full"
}

// Needed to bundle org.conqat.lib.commons into the report-generator
// as this dependency is not available via mavenCentral
shadowJar {
    classifier = null
    configurations = [project.configurations.bundled]
    manifest {
        attributes 'Implementation-Version': pluginVersion
        attributes 'Specification-Version': appVersion
    }
}

install {
    repositories.mavenInstaller {
        configuration = configurations.shadow
    }
}

// At the moment we are stuck with the old maven plugin until support for private key
// files is added or we add a dedicated user with a password to our server.
// https://github.com/gradle/gradle/issues/1263
uploadShadow {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: cqseMavenRepositoryUrl) {
                authentication(userName: cqseMavenRepositoryUser, privateKey: cqseMavenRepositoryPrivateKey)
            }
        }
    }
}
