plugins {
	id 'com.teamscale.java-convention'
	alias(libs.plugins.markdownToPdf)
	id 'application'

	// we don't want to cause conflicts between our dependencies and the target application
	// since the agent will be loaded with the same class loader as the profiled application
	// so we use the shadow plugin to relocate our dependencies
	id 'com.teamscale.shadow-convention'
	id 'com.teamscale.coverage'
	id 'com.teamscale.publish'
}

publishAs {
	artifactId = "teamscale-jacoco-agent"
	readableName = "Teamscale JaCoCo Agent"
	description = "JVM profiler that simplifies various aspects around recording and uploading test coverage"
}

ext {
	outputVersion = rootProject.appVersion + '-jacoco-' + jacocoVersion
}

dependencies {
	implementation(libs.jetty.server)
	implementation(libs.jetty.servlet)

	implementation(libs.jersey.server)
	implementation(libs.jersey.containerServletCore)
	implementation(libs.jersey.containerJettyHttp)
	implementation(libs.jersey.mediaJsonJackson)
	implementation(libs.jersey.hk2)

	implementation project(':teamscale-client')
	implementation project(':report-generator')

	implementation(libs.jacoco.core)
	implementation(libs.jacoco.report)
	implementation(libs.jacoco.agent) {
		artifact {
			classifier = 'runtime'
		}
	}

	implementation(libs.logback.core)
	implementation(libs.logback.classic)

	implementation(libs.jcommander)
	implementation(libs.teamscaleLibCommons)

	implementation(libs.retrofit.core)

	implementation(libs.moshi)

	testImplementation project(':tia-client')
	testImplementation(libs.retrofit.converter.moshi)
	testImplementation(libs.okhttp.mockwebserver)
}

mainClassName = 'com.teamscale.jacoco.agent.Main'

shadowJar {
	// since this is used as an agent, we want it to always have the same name
	// otherwise people have to adjust their -javaagent parameters after every
	// update
	archiveFileName.set('teamscale-jacoco-agent.jar')
	manifest {
		attributes 'Premain-Class': 'com.teamscale.jacoco.agent.PreMain'
	}
}

startShadowScripts {
	applicationName = 'convert'
}

distributions {
	shadow {
		distributionBaseName = 'teamscale-jacoco-agent'
		contents {
			from(readmeToPdf) {
				into 'documentation'
				rename 'README.pdf', 'userguide.pdf'
			}

			filesMatching('**/VERSION.txt') {
				filter {
					it.replace('%APP_VERSION_TOKEN_REPLACED_DURING_BUILD%', outputVersion)
				}
			}
		}
	}
}

tasks.named('shadowDistZip').configure {
	archiveFileName = 'teamscale-jacoco-agent.zip'
}

processResources {
	filesMatching('**/app.properties') {
		filter {
			it.replace('%APP_VERSION_TOKEN_REPLACED_DURING_BUILD%', rootProject.appVersion)
		}
	}
}
