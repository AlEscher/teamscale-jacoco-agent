plugins {
	id 'com.github.ben-manes.versions'
}

ext {
	appVersion = '23.1.1'

	// When upgrading JaCoCo to a newer version make sure to
	// check the comment in the AnalyzerCache.java and CachingInstructionsBuilder.java
	// and update the internal_xxxxxx hash included in the PreMain package name in AgentBase.java.
	jacocoVersion = '0.8.7'
}

subprojects {
	if (VersionUtils.INSTANCE.isTaggedRelease()) {
		version appVersion
	} else {
		version appVersion + '-SNAPSHOT'
	}
}

// Installs all Maven artifacts to your local Maven repository
task publishToMavenLocal
subprojects {
	// must be run after evaluation because the publishToMavenLocal tasks are generated by our plugin during
	// project evaluation
	afterEvaluate {
		def publishTask = it.tasks.findByPath("publishToMavenLocal")
		if (publishTask != null) {
			rootProject.tasks.publishToMavenLocal.dependsOn(publishTask)
		}
	}
}

dependencyUpdates.resolutionStrategy {
	componentSelection { rules ->
		rules.all { ComponentSelection selection ->
			boolean rejected = ['alpha', 'beta', 'b', 'rc', 'cr', 'm', 'preview', 'pr'].any { qualifier ->
				selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
			}
			if (rejected) {
				selection.reject('Release candidate')
			}
		}
	}
}

task buildMavenPlugin(type: Exec) {
	workingDir './teamscale-maven-plugin'
	commandLine './mvnw', 'verify', "-Drevision=${appVersion}"
}

task publishMavenPluginToMavenLocal(type: Exec) {
	workingDir './teamscale-maven-plugin'
	commandLine './mvnw', 'install', "-Drevision=${appVersion}"
}
rootProject.tasks.publishToMavenLocal.dependsOn(publishMavenPluginToMavenLocal)

if (project.hasProperty("sonatypeUsername") &&
	project.hasProperty("sonatypePassword") &&
	project.hasProperty("signing.keyId") &&
	project.hasProperty("signing.secretKeyRingFile")) {

	task publishMavenPluginToMavenCentral(type: Exec, dependsOn: buildMavenPlugin) {
		doFirst {
			file("/tmp/.maven-settings").write("""
					<servers>
						<server>
							<id>sonatype-nexus-snapshots</id>
							<username>${project.property("sonatypeUsername")}</username>
							<password>${project.property("sonatypePassword")}</password>
						</server>
						<server>
							<id>sonatype-nexus-staging</id>
							<username>${project.property("sonatypeUsername")}</username>
							<password>${project.property("sonatypePassword")}</password>
						</server>
					</servers>
					""")
		}

		workingDir './teamscale-maven-plugin'
			commandLine ['./mvnw', 'deploy', "-s", "/tmp/.maven-settings", "-Drevision=${appVersion}",
						"-Dgpg.passphrase=${project.property("signing.password")}",
						"-Dgpg.keyname=${project.property("signing.keyId")}",
						"-DsecretKeyRingFile=${project.property("signing.secretKeyRingFile")}"]

	}
}
