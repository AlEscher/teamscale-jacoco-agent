plugins {
	id "com.github.johnrengelman.shadow" version "1.2.3"
}

apply plugin: 'java'
apply plugin: 'application'

ext.appVersion = '2.0.0'
ext.jacocoVersion = '0.7.9'
ext.outputVersion = appVersion + "-jacoco-" + jacocoVersion

repositories {
	ivy {
		url "https://share.cqse.eu/svn/artifacts/ivy"
	}
    jcenter()
}

dependencies {
    compile group: 'org.jacoco', name: 'org.jacoco.core', version: jacocoVersion
    compile group: 'org.jacoco', name:'org.jacoco.report', version: jacocoVersion
    compile group: 'org.jacoco', name: 'org.jacoco.agent', version: jacocoVersion, classifier: 'runtime'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'

    compile "io.reactivex.rxjava2:rxjava:2.1.2"
    compile "com.beust:jcommander:1.71"
    compile 'org.conqat:org.conqat.lib.commons:0.20160822'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.8.0'
}

mainClassName = "eu.cqse.teamscale.jacoco.client.Main"
shadowJar {
    baseName = 'teamscale-jacoco-client'
    classifier = null
    version = outputVersion
}

processResources {
    filesMatching('**/app.properties') {
        filter {
            it.replace('%APP_VERSION_TOKEN_REPLACED_DURING_BUILD%', appVersion)
        }
    }
}

task doc(type: Exec) {
    doFirst {
        mkdir 'build/doc'
    }
    commandLine 'pandoc', 'USAGE.md', '-o', 'build/doc/USAGE.pdf'
}

task dist(dependsOn: ['clean', 'shadowJar', 'doc'], type: Zip) {
    version outputVersion
    from 'build'
    include 'libs/*.jar'
    include 'doc/*.pdf'
    include 'resources/main/windows/**/*'
    include 'resources/main/linux/**/*'
    include 'resources/main/log4j*.xml'
}

