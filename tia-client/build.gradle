plugins {
	id 'java-library'
	id 'maven'
	id 'jacoco'
}

test {
	useJUnitPlatform() // enable support for JUnit 5
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}
tasks.test.finalizedBy(jacocoTestReport)

version pluginVersion

repositories {
	mavenCentral()
}

jar {
	manifest {
		attributes "Main-Class": "com.teamscale.tia.CommandLineInterface"
	}
}

dependencies {
	api project(':teamscale-client')
	api project(':report-generator')
	api 'com.squareup.retrofit2:retrofit:2.5.0'
	api 'junit:junit:4.13'
	implementation 'com.squareup.retrofit2:converter-moshi:2.5.0'

	testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.13.2'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.1'
	testImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.5.1'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.26.0'

	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.1'
}

// At the moment we are stuck with the old maven plugin until support for private key
// files is added or we add a dedicated user with a password to our server.
// https://github.com/gradle/gradle/issues/1263
uploadArchives {
	repositories {
		mavenDeployer {
			configuration = configurations.deployerJars
			repository(url: cqseMavenRepositoryUrl) {
				authentication(userName: cqseMavenRepositoryUser, privateKey: cqseMavenRepositoryPrivateKey)
			}
		}
	}
}
